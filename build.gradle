plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'io.freefair.lombok' version '8.4'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.40'
    restAssuredVersion = '5.5.6'
    assertJVersion = '4.0.0-M1'
    datafakerVersion = '2.4.4'
    jacksonVersion = '2.20.0'
    aeonbitsOwnerVersion = '1.0.12'
    aspectJVersion = '1.9.22.1'
    allureVersion = '2.26.0'
}

// Define configuration for AspectJ agent
configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    // JUnit 5
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.junit.jupiter:junit-jupiter-params'

    // Spring Boot Starter Test
    implementation 'org.springframework.boot:spring-boot-starter-test'

    // Lombok
    implementation "org.projectlombok:lombok:${lombokVersion}"

    // POJO and Faker
    implementation "net.datafaker:datafaker:${datafakerVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    // REST-assured and AssertJ
    implementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    implementation "org.assertj:assertj-core:${assertJVersion}"

    // Configuration management
    implementation "org.aeonbits.owner:owner-java8:${aeonbitsOwnerVersion}"

    // Allure dependencies
    implementation "io.qameta.allure:allure-junit5:${allureVersion}"
    implementation "io.qameta.allure:allure-rest-assured:${allureVersion}"
    agent "org.aspectj:aspectjweaver:${aspectJVersion}"
}

tasks.register('junit5', Test) {
    group = 'JUnit5'
    description = 'allows running junit tests by tag'

    useJUnitPlatform {
        def tag = project.findProperty('tag') ?: 'full'
        includeTags tag
    }
    jvmArgs = ["-javaagent:${configurations.agent.singleFile}"]
}

test {
    useJUnitPlatform()
    // Configure javaagent for test execution
    jvmArgs = ["-javaagent:${configurations.agent.singleFile}"]
}
